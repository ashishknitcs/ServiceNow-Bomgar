<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2013-03-15 17:36:20">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<collisions/>
<commit_date/>
<deleted/>
<description>High Priority enhancements to Bomgar Integration.&#13;
Mar 2013</description>
<inserted/>
<name>TeamUltra Bomgar Integration - Patch 1</name>
<origin_sys_id/>
<release_date/>
<remote_sys_id>c10287ac5c088100e28a0c90fdabf3eb</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>a0001ccb5c44c100e28a0c90fdabf3c3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_f04edba3e033300029a6fccbaa5d487e</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;LIST&lt;/link_type&gt;&lt;map_page/&gt;&lt;name&gt;u_tu_bg_rep&lt;/name&gt;&lt;order&gt;2200&lt;/order&gt;&lt;query/&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:38:44&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;f04edba3e033300029a6fccbaa5d487e&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:32:08&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title&gt;Bomgar Representative&lt;/title&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>24001ccb5c44c100e28a0c90fdabf3c9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_rep</table>
<target_name>u_tu_bg_rep</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sysevent_script_action_c6e6e4a5295d3000e28a069626280a13</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sysevent_script_action"&gt;&lt;sysevent_script_action action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;condition_script/&gt;&lt;description&gt;Reacts to the session start event from a Bomgar Appliance.&amp;#13;
&amp;#13;
This is implemented as an internal scheduled event within ServiceNow because there seems to be a delay in the Bomgar appliance between sending its session_start event and actually having a session available to be interrogated over the HTTP/XML API. If we react immediately to the session_start event with a retrieveSession call then it returns a "no such session exists" type error message.&lt;/description&gt;&lt;event_name&gt;bomgar.session.start&lt;/event_name&gt;&lt;name&gt;Bomgar Session Start&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;get_session_data( event.parm1, event.parm2 );&amp;#13;
&amp;#13;
function get_session_data( appliance_id, lsid ) {&amp;#13;
   &amp;#13;
   var bg, msg = "Bomgar Session Starts";&amp;#13;
   msg += "\nAppliance ID : [" + appliance_id + "]";&amp;#13;
   msg += "\nLSID : [" + lsid + "]";&amp;#13;
   &amp;#13;
   // Initialise the API&amp;#13;
   try {&amp;#13;
      bg = new BomgarAPI( appliance_id );&amp;#13;
   } catch(e) {&amp;#13;
      msg += "\nFailed to initialise Bomgar API\n" + e.name + "\n" + e.message;&amp;#13;
      gs.logError(msg,'Bomgar Event');&amp;#13;
      return null;&amp;#13;
   }&amp;#13;
   &amp;#13;
   // Get the session data&amp;#13;
   var session = bg.retrieveSession(lsid);&amp;#13;
   if (!session) {&amp;#13;
      msg += "\nFailed to obtain details of session";&amp;#13;
      msg += "\n" + bg.getErrorMessage();&amp;#13;
      gs.logError(msg,'Bomgar Event');&amp;#13;
      return null;&amp;#13;
   }&amp;#13;
   &amp;#13;
   // Update the Bomgar Session record&amp;#13;
   if ( !bg.saveSession(session) ) {&amp;#13;
      msg += "\nFailed to save details of session [" + bg.getSessionName() + "]";&amp;#13;
      msg += "\n" + bg.getErrorMessage();&amp;#13;
      gs.logError(msg,'Bomgar Event');&amp;#13;
      return null;&amp;#13;
   }&amp;#13;
&amp;#13;
   msg += "\nSession saved : [" + bg.getSessionName() + "]";&amp;#13;
   &amp;#13;
   // Read the refresh interval and set next refresh time&amp;#13;
   var refresh_interval = parseInt( gs.getProperty( 'tu.bomgar.session.refresh.interval', '0' ) );&amp;#13;
   msg += "\nRefresh interval : [" + refresh_interval + "] minutes";&amp;#13;
   var run_at = new GlideDateTime();&amp;#13;
   run_at.addSeconds( refresh_interval * 60 );&amp;#13;
&amp;#13;
   // Schedule the next refresh, if appropriate&amp;#13;
   if ( refresh_interval &amp;gt; 0 &amp;amp;&amp;amp; bg.sessionInProgress ) {&amp;#13;
      gs.eventQueueScheduled('bomgar.session.refresh', current, &amp;#13;
                              appliance_id, lsid, run_at);&amp;#13;
      msg += "\nSession is in progress', refresh scheduled at " + run_at;&amp;#13;
   } else {&amp;#13;
      msg += "\nSession is complete";&amp;#13;
   }&amp;#13;
   &amp;#13;
   // Say we've done it&amp;#13;
   bg.log.logInfo(msg);&amp;#13;
   &amp;#13;
}&amp;#13;
&lt;/script&gt;&lt;synchronous&gt;false&lt;/synchronous&gt;&lt;sys_class_name&gt;sysevent_script_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;huw.nolan&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2012-10-25 10:51:34&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;c6e6e4a5295d3000e28a069626280a13&lt;/sys_id&gt;&lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:16:35&lt;/sys_updated_on&gt;&lt;u_reason_for_change/&gt;&lt;/sysevent_script_action&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>28001ccb5c44c100e28a0c90fdabf3c8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>bomgar</table>
<target_name>Bomgar Session Start</target_name>
<type>Script Action</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_14efd3a3e033300029a6fccbaa5d4805</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;false&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;LIST&lt;/link_type&gt;&lt;map_page/&gt;&lt;name&gt;u_tu_bg_system_actor&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;query/&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:45:48&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;14efd3a3e033300029a6fccbaa5d4805&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:32:39&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title&gt;Bomgar System Actor&lt;/title&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>2c001ccb5c44c100e28a0c90fdabf3c5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_system_actor</table>
<target_name>u_tu_bg_system_actor</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_properties_ea5e88925c40c100e28a0c90fdabf3be</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_properties"&gt;&lt;sys_properties action="INSERT_OR_UPDATE"&gt;&lt;choices/&gt;&lt;description&gt;Please enter the refresh interval (in minutes) for active Bomgar sessions. (Enter 0 to inhibit refresh).&lt;/description&gt;&lt;ignore_cache&gt;false&lt;/ignore_cache&gt;&lt;is_private&gt;false&lt;/is_private&gt;&lt;name&gt;tu.bomgar.session.refresh.interval&lt;/name&gt;&lt;read_roles/&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-13 09:35:57&lt;/sys_created_on&gt;&lt;sys_id&gt;ea5e88925c40c100e28a0c90fdabf3be&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 09:35:57&lt;/sys_updated_on&gt;&lt;type&gt;integer&lt;/type&gt;&lt;value&gt;5&lt;/value&gt;&lt;write_roles/&gt;&lt;/sys_properties&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=ea5e88925c40c100e28a0c90fdabf3be"/&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>2c001ccb5c44c100e28a0c90fdabf3c6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>tu.bomgar.session.refresh.interval</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_application_b5bdd7a3e033300029a6fccbaa5d4857</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_application"&gt;&lt;sys_app_application action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;category/&gt;&lt;device_type&gt;browser&lt;/device_type&gt;&lt;hint/&gt;&lt;name&gt;bomgar&lt;/name&gt;&lt;order/&gt;&lt;roles&gt;bomgar_rep&lt;/roles&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:36:21&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:34:29&lt;/sys_updated_on&gt;&lt;title&gt;Bomgar&lt;/title&gt;&lt;view_name/&gt;&lt;/sys_app_application&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>2c001ccb5c44c100e28a0c90fdabf3c7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>bomgar</target_name>
<type>Application</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action/>
<category>customer</category>
<comments/>
<name>sys_dictionary_u_tu_bg_appliance_u_hostname</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sys_dictionary element="u_hostname" table="u_tu_bg_appliance"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation/&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;display&gt;true&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;element&gt;u_hostname&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;internal_type&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;100&lt;/max_length&gt;&lt;name&gt;u_tu_bg_appliance&lt;/name&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_qual/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-08 12:04:36&lt;/sys_created_on&gt;&lt;sys_id&gt;cdf0cf6c5c088100e28a0c90fdabf3c7&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-08 12:13:40&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>60001ccb5c44c100e28a0c90fdabf3c5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_appliance</table>
<target_name>Bomgar Appliance.u_hostname</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sysevent_register_0ab21ce1295d3000e28a069626280a12</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sysevent_register"&gt;&lt;sysevent_register action="INSERT_OR_UPDATE"&gt;&lt;description&gt;Event to read session details from Bomgar Appliance, shortly after the session start event.&lt;/description&gt;&lt;event_name&gt;bomgar.session.start&lt;/event_name&gt;&lt;fired_by&gt;BomgarEvent Script Include&lt;/fired_by&gt;&lt;queue/&gt;&lt;sys_created_by&gt;huw.nolan&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2012-10-25 09:06:43&lt;/sys_created_on&gt;&lt;sys_id&gt;0ab21ce1295d3000e28a069626280a12&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-08 13:39:21&lt;/sys_updated_on&gt;&lt;table&gt;u_tu_bg_session&lt;/table&gt;&lt;/sysevent_register&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>64001ccb5c44c100e28a0c90fdabf3c8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_session</table>
<target_name>bomgar.session.start</target_name>
<type>Event Registration</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_de8e1fa3e033300029a6fccbaa5d48b1</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;false&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;LIST&lt;/link_type&gt;&lt;map_page/&gt;&lt;name&gt;u_tu_bg_session_actor&lt;/name&gt;&lt;order&gt;250&lt;/order&gt;&lt;query/&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:39:56&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;de8e1fa3e033300029a6fccbaa5d48b1&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:32:39&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title&gt;Bomgar Session Actor&lt;/title&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>68001ccb5c44c100e28a0c90fdabf3c5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_session_actor</table>
<target_name>u_tu_bg_session_actor</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_script_include_76f8483be033300029a6fccbaa5d482d</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;BomgarAPI&lt;/name&gt;&lt;script&gt;var BomgarAPI = Class.create();&amp;#13;
BomgarAPI.prototype = {&amp;#13;
   &amp;#13;
   initialize: function( appliance ) {&amp;#13;
      this.log = new GSLog('tu.bomgar.loglevel.api','Bomgar API');&amp;#13;
      &amp;#13;
      // Get default appliance, or use 'teamultra.bomgar.com'&amp;#13;
      if ( !appliance ) {&amp;#13;
         appliance = gs.getProperty( 'tu.bomgar.hostname', 'teamultra.bomgar.com' );&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Find the appliance with the matching Hostname, IP or Appliance GUID&amp;#13;
      var app = new GlideRecord('u_tu_bg_appliance');&amp;#13;
      var qc = app.addQuery('u_hostname', appliance);&amp;#13;
      qc.addOrCondition('u_public_ip', appliance);&amp;#13;
      qc.addOrCondition('u_appliance_id', appliance);&amp;#13;
      app.query();&amp;#13;
      if ( !app.next() ) {&amp;#13;
         throw {&amp;#13;
            'name': 'Invalid Bomgar Appliance',&amp;#13;
            'message': 'Failed to find Bomgar appliance [' + appliance + ']'&amp;#13;
         };&amp;#13;
      }&amp;#13;
      &amp;#13;
      this.grAppliance = app;&amp;#13;
      this.appliance_id = app.sys_id.toString();&amp;#13;
      this.bgConn = new BomgarConnection(app);&amp;#13;
&amp;#13;
      // Store the session event names that should be recorded as worknotes&amp;#13;
      var wne = '' + gs.getProperty( 'tu.bomgar.worknote.events', '' );&amp;#13;
      this.worknote_events = wne.split(/\s*,\s*/);&amp;#13;
&amp;#13;
      this.sessionActors = {};   // Object used to cache Actor sys_ids&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   // The following functions return information about the state of this object.&amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   //&amp;#13;
   //-------------------------------------------------------&amp;#13;
   getSessionId: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      if (this.grSession) {&amp;#13;
         return this.grSession.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   getSessionName: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      if (this.grSession) {&amp;#13;
         return this.grSession.u_display_name.toString();&amp;#13;
      } else {&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   getErrorMessage: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      return this.errorMessage;&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   getGlideDateTime: function(item) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      var ts = "";&amp;#13;
      &amp;#13;
      // Handle elements with a timestamp/ts attribute&amp;#13;
      if ( typeof item == 'object' &amp;amp;&amp;amp; item["@timestamp"] ) {&amp;#13;
         ts = item["@timestamp"];&amp;#13;
      } else if ( typeof item == 'object' &amp;amp;&amp;amp; item["@ts"] ) {&amp;#13;
         ts = item["@ts"];&amp;#13;
      } else {&amp;#13;
         // Otherwise treat as a string&amp;#13;
         ts = item;&amp;#13;
      }&amp;#13;
      &amp;#13;
      var secs = parseInt(ts);&amp;#13;
      var gdt = new GlideDateTime();&amp;#13;
      if ( secs &amp;gt; 0 ) {&amp;#13;
         gdt.setNumericValue( secs * 1000 );&amp;#13;
         return gdt;&amp;#13;
      } else {&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   sessionInProgress: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      if ( this.grSession ) {&amp;#13;
         if ( this.grSession.u_end_time ) {&amp;#13;
            return false;&amp;#13;
         } else {&amp;#13;
            return true;&amp;#13;
         }&amp;#13;
      } else {&amp;#13;
         return false;&amp;#13;
      }&amp;#13;
   },&amp;#13;
   &amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   // The following ( mostly retrieveXXX ) functions retrieve information from the&amp;#13;
   // Bomgar appliance. Data is returned as a JavaScript object which reflects the&amp;#13;
   // structure of the XML document returned by the Bomgar API.&amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   //&amp;#13;
   //-------------------------------------------------------&amp;#13;
   generateSessionKey: function(task_no) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "action", "generate_session_key" ] );&amp;#13;
      pa.push( [ "type", "support" ] );&amp;#13;
      pa.push( [ "queue_id", "general" ] );&amp;#13;
      pa.push( [ "ttl", "1800" ] );&amp;#13;
      pa.push( [ "external_key", task_no ] );&amp;#13;
&amp;#13;
      var resp = this.bgConn.sendCommand(pa);&amp;#13;
      return this.checkResponse( resp, 'session_key' );&amp;#13;
   },&amp;#13;
&amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveApiInfo: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "action", "get_api_info" ] );&amp;#13;
&amp;#13;
      var resp = this.bgConn.sendCommand(pa);&amp;#13;
      return this.checkResponse( resp, 'api_information' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveLoggedInReps: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "action", "get_logged_in_reps" ] );&amp;#13;
&amp;#13;
      var resp = this.bgConn.sendCommand(pa);&amp;#13;
      return this.checkResponse( resp, 'logged_in_reps', 'rep' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveSupportTeams: function( showmembers ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "action", "get_support_teams" ] );&amp;#13;
      if (showmembers) {&amp;#13;
         pa.push( [ "showmembers", "1" ] );&amp;#13;
      }&amp;#13;
&amp;#13;
      var resp = this.bgConn.sendCommand(pa);&amp;#13;
      return this.checkResponse( resp, 'support_teams', 'support_team' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveSessionList: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "generate_report", "SupportSessionListing" ] );&amp;#13;
&amp;#13;
      var resp = this.bgConn.runReport(pa);&amp;#13;
      return this.checkResponse( resp, 'session_summary_list', 'session_summary' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveSessionSummary: function() {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "generate_report", "SupportSessionSummary" ] );&amp;#13;
      pa.push( [ "report_type", "rep" ] );&amp;#13;
&amp;#13;
      var resp = this.bgConn.runReport(pa);&amp;#13;
      return this.checkResponse( resp, 'summary_list', 'summary' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveExitSurvey: function( lsid, survey_type ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      // Get session end_time&amp;#13;
      this.findSession(lsid);&amp;#13;
      var ms = this.grSession.u_start_time.getGlideObject().getNumericValue(); // milli-seconds&amp;#13;
      var et = Math.round( ms / 1000 ) - 5; // Convert to seconds and adjust down by 5 secs&amp;#13;
      &amp;#13;
      var pa = [];  // Param array&amp;#13;
      if ( survey_type == 'rep' ) {&amp;#13;
         pa.push( [ "generate_report", "SupportRepExitSurvey" ] );&amp;#13;
      } else {&amp;#13;
         pa.push( [ "generate_report", "SupportCustExitSurvey" ] );&amp;#13;
      }&amp;#13;
      pa.push( [ "start_time", et ] );&amp;#13;
      pa.push( [ "duration", "10" ] ); // Search within 10 sec window&amp;#13;
      pa.push( [ "report_type", "rep" ] );&amp;#13;
      pa.push( [ "id", "all" ] );&amp;#13;
      &amp;#13;
      var resp = this.bgConn.runReport(pa);&amp;#13;
      return this.checkResponse( resp, 'exit_survey_list', 'exit_survey' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   retrieveSession: function( lsid ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      var msg = "retrieveSession( " + lsid + " )";&amp;#13;
      var pa = [];  // Param array&amp;#13;
      pa.push( [ "generate_report", "SupportSession" ] );&amp;#13;
      pa.push( [ "lsid", lsid ] );&amp;#13;
&amp;#13;
      var resp = this.bgConn.runReport(pa);&amp;#13;
      return this.checkResponse( resp, 'session_list', 'session' );&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   checkResponse: function( resp, valid_root, valid_child ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      var msg = "";&amp;#13;
      &amp;#13;
      // Get XML root element&amp;#13;
      var root = this.bgConn.getResponseRootName();&amp;#13;
      &amp;#13;
      // Check XML root for success first&amp;#13;
      if ( root == valid_root ) {&amp;#13;
         if ( !valid_child ) {&amp;#13;
            // No child element expected, return entire response&amp;#13;
            return resp;&amp;#13;
         } else if ( !resp ) {&amp;#13;
            // The root element is empty&amp;#13;
            msg = "Received empty response from Bomgar Appliance";&amp;#13;
            msg += "\nXML root element [" + root + "] is empty";&amp;#13;
            this.errorMessage = msg;&amp;#13;
            return null;&amp;#13;
         } else if ( resp[valid_child] ) {&amp;#13;
            // Expected child element was found, return the child element&amp;#13;
            return resp[valid_child];&amp;#13;
         } else if ( resp.error ) {&amp;#13;
            // The child element is an error element&amp;#13;
            msg = "Received error response from Bomgar Appliance";&amp;#13;
            msg += "\nError: [" + resp + "]";&amp;#13;
            this.errorMessage = msg;&amp;#13;
            return null;&amp;#13;
         } else {&amp;#13;
            msg = "Unexpected response from Bomgar Appliance";&amp;#13;
            msg += "\nXML root: [" + root + "]";&amp;#13;
            msg += "\nResponse: [" + resp + "]";&amp;#13;
            this.errorMessage = msg;&amp;#13;
            return null;&amp;#13;
         }&amp;#13;
      } else if ( root == 'error' ) {&amp;#13;
         msg = "Received error response from Bomgar Appliance";&amp;#13;
         msg += "\nError: [" + resp + "]";&amp;#13;
         this.errorMessage = msg;&amp;#13;
         return null;&amp;#13;
      } else {&amp;#13;
         msg = "Unexpected response from Bomgar Appliance";&amp;#13;
         msg += "\nXML root: [" + root + "]";&amp;#13;
         msg += "\nResponse: [" + resp + "]";&amp;#13;
         msg += "\n" + this.bgConn.errorMessage;&amp;#13;
         this.errorMessage = msg;&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   // The following saveXXX functions extract information from the JavaScript&amp;#13;
   // object returned by the getXXX functions and store the data as interlinked&amp;#13;
   // glide records.&amp;#13;
   //&amp;#13;
   // Whenever possible the save routines will attempt to locate an existing&amp;#13;
   // record and update that, but will create new records when no existing&amp;#13;
   // record is found.&amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   //&amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveSession: function( session ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      // session:  /session_list/session&amp;#13;
      &amp;#13;
      var i, msg = "saveSession";&amp;#13;
      var lsid = session["@lsid"];&amp;#13;
      if (!lsid) { return null; }&amp;#13;
      var gr = this.findSession(lsid);&amp;#13;
      if (!gr) { return null; }&amp;#13;
      &amp;#13;
      gr.u_lseq = session.lseq;&amp;#13;
      gr.u_session_type = session.session_type;&amp;#13;
      &amp;#13;
      gr.u_start_time = this.getGlideDateTime( session.start_time );&amp;#13;
      gr.u_end_time = this.getGlideDateTime( session.end_time );&amp;#13;
      gr.u_duration = session.duration;&amp;#13;
      &amp;#13;
      if ( session.external_key ) {&amp;#13;
         gr.u_external_key = session.external_key;&amp;#13;
         gr.u_task = this.findTaskId( session.external_key );&amp;#13;
      }&amp;#13;
      gr.u_file_transfers = session.file_transfer_count;&amp;#13;
      gr.u_public_site_id = session.public_site["@id"];&amp;#13;
      gr.u_public_site_name = session.public_site["#text"];&amp;#13;
      &amp;#13;
      // A temporary lookup object to map gsnumber to sys_id&amp;#13;
      this.sessionActors = {};&amp;#13;
      &amp;#13;
      // Save Customer (there is only ever one Customer)&amp;#13;
      if ( session.customer_list ) {&amp;#13;
         var cust = session.customer_list.customer;&amp;#13;
         if ( cust ) {&amp;#13;
            this.saveSessionCust( cust );&amp;#13;
         }&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Save Session Reps&amp;#13;
      if ( session.rep_list &amp;amp;&amp;amp; session.rep_list.representative ) {&amp;#13;
         var reps = this.ensureArray( session.rep_list.representative );&amp;#13;
         for ( i=0; i&amp;lt;reps.length; i++ ) {&amp;#13;
            this.saveSessionRep( reps[i] );&amp;#13;
         }&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Compose name from primary actors&amp;#13;
      var pri_cust_name = 'NoCustomer';&amp;#13;
      var pri_cust = session.primary_customer;&amp;#13;
      if ( pri_cust &amp;amp;&amp;amp; pri_cust['#text'] ) {&amp;#13;
         pri_cust_name = pri_cust['#text'];&amp;#13;
      }&amp;#13;
      var pri_rep_name = 'NoRep';&amp;#13;
      var pri_rep = session.primary_rep;&amp;#13;
      if ( pri_rep &amp;amp;&amp;amp; pri_rep['#text'] ) {&amp;#13;
         pri_rep_name = pri_rep['#text'];&amp;#13;
      }&amp;#13;
      gr.u_display_name = 'For ' + pri_cust_name + ' by ' + pri_rep_name;&amp;#13;
&amp;#13;
      this.log.logDebug('saveSession - For ' + pri_cust_name + ' by ' + pri_rep_name );&amp;#13;
      &amp;#13;
      var session_id = gr.update();&amp;#13;
&amp;#13;
      this.log.logDebug('saveSession - ' + session_id );&amp;#13;
     &amp;#13;
      // Save Session Events&amp;#13;
      if ( session.session_details &amp;amp;&amp;amp; session.session_details.event ) {&amp;#13;
         var events = this.ensureArray( session.session_details.event );&amp;#13;
         for ( i=0; i&amp;lt;events.length; i++ ) {&amp;#13;
            this.saveSessionEvent( events[i], i );&amp;#13;
         }&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Pre-create Session Surveys, if absent&amp;#13;
      if ( session.cust_survey_list &amp;amp;&amp;amp; session.cust_survey_list.cust_exit_survey ) {&amp;#13;
         this.findSurveyId( session.cust_survey_list.cust_exit_survey, 'cust' );&amp;#13;
      }&amp;#13;
      if ( session.rep_survey_list &amp;amp;&amp;amp; session.rep_survey_list.rep_exit_survey ) {&amp;#13;
         this.findSurveyId( session.rep_survey_list.rep_exit_survey, 'rep' );&amp;#13;
      }&amp;#13;
      &amp;#13;
      return session_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveSessionCust: function( cust ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      // cust:  /session_list/session/customer_list/customer&amp;#13;
      &amp;#13;
      var i;&amp;#13;
      var session_id = this.grSession.sys_id.toString();&amp;#13;
      var gsno = cust['@gsnumber'];&amp;#13;
      if ( !gsno ) { return null; }&amp;#13;
         &amp;#13;
      var gr = new GlideRecord('u_tu_bg_session_customer');&amp;#13;
      gr.addQuery('u_session',session_id);&amp;#13;
      gr.addQuery('u_gsnumber',gsno);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( !gr.next() ) {&amp;#13;
         // Record not found, so initialise object&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_session = session_id;&amp;#13;
         gr.u_gsnumber = gsno;&amp;#13;
      }&amp;#13;
      &amp;#13;
      gr.u_actor_type = 'customer';&amp;#13;
      gr.u_primary_actor = cust.primary_cust;&amp;#13;
      &amp;#13;
      // Session details&amp;#13;
      if ( cust.info.name ) {&amp;#13;
         gr.u_display_name = cust.info.name;&amp;#13;
      } else {&amp;#13;
         gr.u_display_name = cust.username;&amp;#13;
      }&amp;#13;
      gr.u_company = cust.info.company;&amp;#13;
      gr.u_issue = cust.info.issue;&amp;#13;
      &amp;#13;
      // Environment details&amp;#13;
      gr.u_hostname = cust.hostname;&amp;#13;
      gr.u_username = cust.username;&amp;#13;
      gr.u_os = cust.os;&amp;#13;
      gr.u_private_ip = cust.private_ip;&amp;#13;
      gr.u_public_ip = cust.public_ip;&amp;#13;
      &amp;#13;
      // ( Call to update will act as insert, if rec does not exist )&amp;#13;
      var cust_id = gr.update();&amp;#13;
&amp;#13;
      // Cache sys_id for future lookup&amp;#13;
      var actor_key = 'gs' + gsno;&amp;#13;
      this.log.logDebug("saveSessionCust - " + actor_key + " - " + cust_id );&amp;#13;
     &amp;#13;
      this.sessionActors[actor_key] = cust_id;&amp;#13;
      return cust_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveSessionRep: function( rep ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      // rep:  /session_list/session/rep_list/representative&amp;#13;
      &amp;#13;
      var i, session_id = this.grSession.sys_id.toString();&amp;#13;
      var gsno = rep['@gsnumber'];&amp;#13;
      if ( !gsno ) { return null; }&amp;#13;
         &amp;#13;
      var rep_id = this.findRepId(rep);&amp;#13;
      &amp;#13;
      var gr = new GlideRecord('u_tu_bg_session_rep');&amp;#13;
      gr.addQuery('u_rep',rep_id);&amp;#13;
      gr.addQuery('u_session',session_id);&amp;#13;
      gr.addQuery('u_gsnumber',gsno);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( !gr.next() ) {&amp;#13;
         // Record not found, so initialise object&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_rep = rep_id;&amp;#13;
         gr.u_session = session_id;&amp;#13;
         gr.u_gsnumber = gsno;&amp;#13;
      }&amp;#13;
      &amp;#13;
      gr.u_actor_type = 'representative';&amp;#13;
      gr.u_primary_actor = rep.primary_rep;&amp;#13;
      &amp;#13;
      // Session details&amp;#13;
      gr.u_display_name = rep.display_name;&amp;#13;
      gr.u_seconds_involved = rep.seconds_involved;&amp;#13;
      &amp;#13;
      // Environment details&amp;#13;
      gr.u_hostname = rep.hostname;&amp;#13;
      gr.u_username = rep.username;&amp;#13;
      gr.u_os = rep.os;&amp;#13;
      gr.u_private_ip = rep.private_ip;&amp;#13;
      gr.u_public_ip = rep.public_ip;&amp;#13;
      &amp;#13;
      // ( Call to update will act as insert, if rec does not exist )&amp;#13;
      var session_rep_id  = gr.update();&amp;#13;
&amp;#13;
      // Cache sys_id for future lookup&amp;#13;
      var actor_key = 'gs' + gsno;&amp;#13;
      this.log.logDebug("saveSessionRep - " + actor_key + " - " + session_rep_id );&amp;#13;
&amp;#13;
      this.sessionActors[actor_key] = session_rep_id;&amp;#13;
      return session_rep_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveExitSurvey: function( survey ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      // survey : /exit_survey_list/exit_survey&amp;#13;
      &amp;#13;
      var gsno, i;&amp;#13;
      var lsid = survey['@lsid'];&amp;#13;
      var survey_type = survey.submitted_by['@type'];&amp;#13;
      if ( survey_type == 'rep' ) {&amp;#13;
         gsno = survey.primary_rep['@gsnumber'];&amp;#13;
      } else {&amp;#13;
         gsno = survey.primary_customer['@gsnumber'];&amp;#13;
      }&amp;#13;
      if ( !lsid || !gsno ) { return null; }&amp;#13;
         &amp;#13;
      var session_id = this.findSession(lsid).sys_id.toString();&amp;#13;
      if (!session_id) { return null; }&amp;#13;
         &amp;#13;
      var gr = new GlideRecord('u_tu_bg_exit_survey');&amp;#13;
      gr.addQuery('u_session',session_id);&amp;#13;
      gr.addQuery('u_gsnumber',gsno);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( !gr.next() ) {&amp;#13;
         // Record not found, so initialise object&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_session = session_id;&amp;#13;
         gr.u_gsnumber = gsno;&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Populate Survey record&amp;#13;
      gr.u_survey_type = survey_type;&amp;#13;
      gr.u_survey_time = this.getGlideDateTime(survey);&amp;#13;
      if ( survey_type == 'rep' ) {&amp;#13;
         // The Session Rep may not have been created when the &amp;#13;
         // RepExitSurvey event arrives, so attempt to create it&amp;#13;
         var reps = this.ensureArray( survey.rep_list.representative );&amp;#13;
         if ( reps &amp;amp;&amp;amp; reps[0] ) {&amp;#13;
            gr.u_submitted_by = this.saveSessionRep(reps[0]);&amp;#13;
         } else {&amp;#13;
            gr.u_submitted_by = this.findActorId(survey.primary_rep);&amp;#13;
         }&amp;#13;
      } else {&amp;#13;
         gr.u_submitted_by = this.findActorId(survey.primary_customer);&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Ensure that we have an array&amp;#13;
      var questions = this.ensureArray( survey.question_list.question );&amp;#13;
      &amp;#13;
      // Process questions and answers&amp;#13;
      var qna = '', q, q_no, q_name, ans;&amp;#13;
      for ( i=0; i&amp;lt;questions.length; i++ ) {&amp;#13;
         q = questions[i]; q_no = q['@id'];&amp;#13;
         qna += "Q" + q_no + ".\t(" + q.type + ")\t" + q.label +"\n";&amp;#13;
         ans = q.answer_list.answer;&amp;#13;
&amp;#13;
         // Ensure we have a valid string&amp;#13;
         if (ans) {&amp;#13;
            ans = ans.replace(/\\n/g,'');  // Strip redundant escaped newline characters&amp;#13;
         } else {&amp;#13;
            ans = '';&amp;#13;
         }&amp;#13;
         &amp;#13;
         // Handle special types of question&amp;#13;
         if ( q.name == 'rating' ) {&amp;#13;
            gr.u_rating = ans;&amp;#13;
            qna += "\t" + q.report_header + "\t" + ans + "\n";&amp;#13;
         } else if  ( q.name == 'comments' ) {&amp;#13;
            gr.u_comments = ans;&amp;#13;
            qna += "\t" + q.report_header + "\t (see Comments field ) \n";&amp;#13;
         } else {&amp;#13;
            qna += "\t" + q.report_header + "\t" + ans + "\n";&amp;#13;
         }&amp;#13;
         &amp;#13;
      }&amp;#13;
      &amp;#13;
      gr.u_details = qna;&amp;#13;
&amp;#13;
      // ( Call to update will act as insert, if rec does not exist )&amp;#13;
      var survey_id = gr.update();&amp;#13;
      return survey_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveSessionEvent: function( se, seq ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      // se (session_event):  /session/session_details/event&amp;#13;
      // seq: Sequence number of session_event&amp;#13;
      &amp;#13;
      // Returns the result of inserting or updating the Session Event record&amp;#13;
      &amp;#13;
      var i, gsno;&amp;#13;
      var session_id = this.grSession.sys_id.toString();&amp;#13;
      var gr = new GlideRecord('u_tu_bg_session_event');&amp;#13;
      gr.addQuery('u_session',session_id);&amp;#13;
      gr.addQuery('u_seq_no',seq);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( !gr.next() ) {&amp;#13;
         // Record not found, so initialise object&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_session = session_id;&amp;#13;
         gr.u_seq_no = seq;&amp;#13;
      }&amp;#13;
      &amp;#13;
      var bg_event_type = se["@event_type"];&amp;#13;
      var bg_event_ts = se["@timestamp"];&amp;#13;
      gr.u_event_type = bg_event_type;&amp;#13;
      gr.u_event_time = this.getGlideDateTime( bg_event_ts );&amp;#13;
      &amp;#13;
      gr.u_destination = this.findActorId( se.destination );&amp;#13;
      gr.u_performed_by = this.findActorId( se.performed_by );&amp;#13;
      &amp;#13;
      // Both body and data elements are saved to the u_data field&amp;#13;
      if ( se.data &amp;amp;&amp;amp; se.data.value ) {&amp;#13;
         var data_values = this.ensureArray( se.data.value );&amp;#13;
         var data_text = '';&amp;#13;
         for (i=0;i&amp;lt;data_values.length;i++) {&amp;#13;
            data_text += '\n' + data_values[i]['@name'] + ' : ' + data_values[i]['@value'];&amp;#13;
         }&amp;#13;
         gr.u_data = data_text;&amp;#13;
      }&amp;#13;
&amp;#13;
      // Append body to event data field&amp;#13;
      if ( se.body ) {&amp;#13;
         gr.u_data += '\n' + se.body;&amp;#13;
      }&amp;#13;
      &amp;#13;
      // ( Call to update will act as insert, if rec does not exist )&amp;#13;
      var event_id = gr.update();&amp;#13;
&amp;#13;
      // Check whether this event type should be recorded as a Work Note&amp;#13;
      for (i=0; i&amp;lt;this.worknote_events.length; i++ ) {&amp;#13;
         if ( this.worknote_events[i] == bg_event_type ) {&amp;#13;
            this.addEventWorkNote( gr, se );&amp;#13;
            break;&amp;#13;
         }&amp;#13;
      }&amp;#13;
      &amp;#13;
      return event_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveSupportTeams: function( teams ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      //  /support_teams&amp;#13;
     &amp;#13;
      var i, n=0;&amp;#13;
      if ( teams ) {&amp;#13;
         var support_teams = this.ensureArray(teams);&amp;#13;
         for ( i=0; i&amp;lt;support_teams.length; i++ ) {&amp;#13;
            if ( this.saveSupportTeam( support_teams[i] ) ) {&amp;#13;
               n++;&amp;#13;
            }&amp;#13;
         }&amp;#13;
      }&amp;#13;
     return n;&amp;#13;
&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   saveSupportTeam: function( team ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      &amp;#13;
      //  /support_teams/support_team&amp;#13;
      &amp;#13;
      var i, msg = "saveSupportTeam";&amp;#13;
      var team_id = team['@id'];&amp;#13;
      &amp;#13;
      var gr = new GlideRecord('u_tu_bg_team');&amp;#13;
      gr.addQuery('u_appliance',this.appliance_id);&amp;#13;
      gr.addQuery('u_team_id',team_id);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( !gr.next() ) {&amp;#13;
         // Record not found, so initialise object&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_appliance = this.appliance_id;&amp;#13;
         gr.u_team_id = team_id;&amp;#13;
      }&amp;#13;
      &amp;#13;
      gr.u_name = team.name;&amp;#13;
&amp;#13;
      // ( Call to update will act as insert, if rec does not exist )&amp;#13;
      var team_sys_id = gr.update();&amp;#13;
      &amp;#13;
      // Add members&amp;#13;
      &amp;#13;
      // Add issues&amp;#13;
&amp;#13;
      return team_sys_id;&amp;#13;
            &amp;#13;
   },&amp;#13;
   &amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   // The following functions deal with finding and creating Bomgar records&amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   //&amp;#13;
   //-------------------------------------------------------&amp;#13;
   createSession: function( lsid, task_no ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      // Returns a GlideRecord object for the created Bomgar Session&amp;#13;
&amp;#13;
      var msg = "createSession";&amp;#13;
&amp;#13;
      // Return existing session, if it exists&amp;#13;
      var gr = this.findSession(lsid);&amp;#13;
      if ( gr ) { &amp;#13;
         msg += "\nFound existing session: " + gr.getDisplayValue();&amp;#13;
         this.log.logInfo(msg);&amp;#13;
         return gr; &amp;#13;
      } else {&amp;#13;
         // Reset error message if not found&amp;#13;
         this.errorMessage = null;&amp;#13;
      }&amp;#13;
      &amp;#13;
      gr = new GlideRecord('u_tu_bg_session');&amp;#13;
      gr.u_appliance = this.grAppliance.sys_id.toString();&amp;#13;
      gr.u_lsid = lsid;&amp;#13;
      gr.u_task = this.findTaskId( task_no );&amp;#13;
      gr.u_display_name = "New Session";&amp;#13;
      var session_id = gr.insert();&amp;#13;
      &amp;#13;
      if ( session_id ) {&amp;#13;
         this.grSession = gr;&amp;#13;
         msg += "\nCreated Session: " + gr.getDisplayValue();&amp;#13;
         this.log.logInfo(msg);&amp;#13;
         return gr;&amp;#13;
      } else {&amp;#13;
         this.errorMessage = "Failed to create session with lsid [" + lsid + "]";&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findSession: function( lsid ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      // Returns a GlideRecord object for the Session&amp;#13;
      &amp;#13;
      var gr = new GlideRecord('u_tu_bg_session');&amp;#13;
      gr.addQuery('u_appliance',this.appliance_id);&amp;#13;
      gr.addQuery('u_lsid',lsid);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( gr.next() ) {&amp;#13;
         // Session found, get ref and return&amp;#13;
         this.grSession = gr;&amp;#13;
         return gr;&amp;#13;
      } else {&amp;#13;
         this.log.logWarning( "Session not found, lsid: [" + lsid + "]" );&amp;#13;
         this.grSession = null;&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findActorId: function( item ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      // Returns the sys_id of the Bomgar Actor record&amp;#13;
&amp;#13;
      // item:  //event/destination or //event/performed_by&amp;#13;
      &amp;#13;
      // This routine finds (and caches) sys_ids of Actors&amp;#13;
      // for the current Session. It will create System Actor&amp;#13;
      // records, if they do not exist, but it will not create&amp;#13;
      // Customers or Reps.&amp;#13;
&amp;#13;
      // We can get called for non-existant elements, so protect &amp;#13;
      // ourselves from that.&amp;#13;
      if ( !item ) { return null; }&amp;#13;
&amp;#13;
      var msg = "findActorId";&amp;#13;
      &amp;#13;
      // Extract expected information from object&amp;#13;
      var actor_name = item['#text'];&amp;#13;
      var actor_type = item['@type'];&amp;#13;
      var actor_gsno = item['@gsnumber'];&amp;#13;
      var actor_id, actor_key;&amp;#13;
&amp;#13;
      msg += "\n " + actor_gsno + " : " + actor_type + " : " + actor_name;&amp;#13;
      &amp;#13;
      if ( actor_gsno != "0" ) {&amp;#13;
         // This is a Customer or Rep lookup&amp;#13;
         actor_key = 'gs' + actor_gsno;&amp;#13;
         msg += "\nActor Key: " + actor_key;&amp;#13;
         actor_id = this.sessionActors[actor_key];&amp;#13;
         if ( !actor_id ) {&amp;#13;
            msg += "\nCust or Rep: not found in cache"; &amp;#13;
            actor_id = this.findSessionActorId( actor_gsno );&amp;#13;
         }&amp;#13;
      } else {&amp;#13;
         // This is a System Actor lookup&amp;#13;
         actor_key = actor_type + "_" + actor_name;&amp;#13;
         msg += "\nActor Key: " + actor_key;&amp;#13;
         actor_id = this.sessionActors[actor_key];&amp;#13;
         if ( !actor_id ) {&amp;#13;
            msg += "\nSystem: not found in cache"; &amp;#13;
            actor_id = this.findSystemActorId( actor_type, actor_name );&amp;#13;
         }&amp;#13;
      }&amp;#13;
&amp;#13;
      msg += "\nActor Id: " + actor_id;&amp;#13;
      this.log.logDebug(msg);&amp;#13;
      &amp;#13;
      return actor_id;&amp;#13;
   },&amp;#13;
      &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findSessionActorId: function( actor_gsno ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      // This routine finds a Bomgar Session Actor record &amp;#13;
      // and caches the resulting sys_id for future lookups.&amp;#13;
      // It does not create a record if the Actor is not found.&amp;#13;
      &amp;#13;
      var session_id = this.grSession.sys_id.toString();&amp;#13;
      var actor_id, gr;&amp;#13;
      &amp;#13;
      // Find the Actor record&amp;#13;
      gr = new GlideRecord('u_tu_bg_session_actor');&amp;#13;
      gr.addQuery('u_session',session_id);&amp;#13;
      gr.addQuery('u_gsnumber',actor_gsno);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( gr.next() ) {&amp;#13;
         actor_id = gr.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         this.log.logWarning( "Session Actor not found, gsnumber: [" + actor_gsno + "]" );&amp;#13;
         actor_id = null;&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Cache and return the id&amp;#13;
      this.sessionActors['gs'+actor_gsno] = actor_id;&amp;#13;
      return actor_id;&amp;#13;
&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findSystemActorId: function( actor_type, actor_name ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      // This routine finds or creates a Bomgar System Actor record &amp;#13;
      // and caches the resulting sys_id for future lookups&amp;#13;
      &amp;#13;
      // Build key from data&amp;#13;
      var actor_key = actor_type + '_' + actor_name;&amp;#13;
      var actor_id;&amp;#13;
         &amp;#13;
      var gr = new GlideRecord('u_tu_bg_system_actor');&amp;#13;
      gr.addQuery('u_appliance',this.appliance_id);&amp;#13;
      gr.addQuery('u_actor_type', actor_type);&amp;#13;
      gr.addQuery('u_display_name', actor_name);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( gr.next() ) {&amp;#13;
         actor_id = gr.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         // Create a new System Actor&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_appliance = this.appliance_id;&amp;#13;
         gr.u_actor_type = actor_type;&amp;#13;
         gr.u_display_name = actor_name;&amp;#13;
         gr.u_gsnumber = '0';&amp;#13;
         actor_id = gr.insert();&amp;#13;
&amp;#13;
         this.log.logNotice("Created new Bomgar System Actor:\n" + &amp;#13;
                            actor_name + " (" + actor_type + ")" );&amp;#13;
&amp;#13;
      }&amp;#13;
      &amp;#13;
      // Cache and return the id&amp;#13;
      this.sessionActors[actor_key] = actor_id;&amp;#13;
      return actor_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findRepId: function( rep ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      // Returns the sys_id of the Bomgar Rep record&amp;#13;
&amp;#13;
      var rep_sys_id, rep_id = rep['@id'];&amp;#13;
      if (!rep_id) { return null; }&amp;#13;
&amp;#13;
      var gr = new GlideRecord('u_tu_bg_rep');&amp;#13;
      gr.addQuery('u_appliance', this.appliance_id);&amp;#13;
      gr.addQuery('u_rep_id',rep_id);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( gr.next() ) {&amp;#13;
         // Rep found, record sys_id&amp;#13;
         rep_sys_id = gr.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         // Record not found, so let's create one&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_appliance = this.appliance_id;&amp;#13;
         gr.u_rep_id = rep_id;&amp;#13;
         gr.u_name = rep.display_name;&amp;#13;
         gr.u_username = rep.username;&amp;#13;
         rep_sys_id = gr.insert();&amp;#13;
         &amp;#13;
         this.log.logNotice("Created new Bomgar Rep\n" + &amp;#13;
                             rep.display_name + " (" + rep.username + ")" );&amp;#13;
      }&amp;#13;
      &amp;#13;
      return rep_sys_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findSurveyId: function( survey, survey_type ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      // Returns the sys_id of the Bomgar Survey record&amp;#13;
&amp;#13;
      // This routine will create a skeleton Exit Survey&amp;#13;
      // record if one is not found.&amp;#13;
&amp;#13;
      var gsno = survey['@gsnumber'];&amp;#13;
      if ( !survey || !gsno ) { return null; }&amp;#13;
&amp;#13;
      var session_id = this.grSession.sys_id.toString();&amp;#13;
      var survey_id, gr;&amp;#13;
      &amp;#13;
      // Find the Actor record&amp;#13;
      gr = new GlideRecord('u_tu_bg_exit_survey');&amp;#13;
      gr.addQuery('u_session',session_id);&amp;#13;
      gr.addQuery('u_gsnumber',gsno);&amp;#13;
      gr.query();&amp;#13;
      &amp;#13;
      if ( gr.next() ) {&amp;#13;
         // Survey found, record sys_id&amp;#13;
         survey_id = gr.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         // Record not found, so let's create one&amp;#13;
         gr.initialize();&amp;#13;
         gr.u_session = session_id;&amp;#13;
         gr.u_gsnumber = gsno;&amp;#13;
         gr.u_survey_type = survey_type;&amp;#13;
         gr.u_submitted_by = this.findActorId( survey );&amp;#13;
&amp;#13;
         survey_id = gr.insert();&amp;#13;
         &amp;#13;
         this.log.logInfo("Created new Bomgar Survey\n" + &amp;#13;
                             survey_type + " (" + gsno + ")" );&amp;#13;
      }&amp;#13;
      &amp;#13;
      return survey_id;&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   addEventWorkNote: function( grEvent, se ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
&amp;#13;
      // grEvent: GlideRecord object for the current Session Event&amp;#13;
      // se (session_event):  /session/session_details/event&amp;#13;
      &amp;#13;
      // Returns the result of inserting or updating the Task record&amp;#13;
&amp;#13;
      var msg = "addEventWorkNote";&amp;#13;
      msg += "\nSession name: [" + this.grSession.u_display_name + "]";&amp;#13;
&amp;#13;
      // Find the task related to this session&amp;#13;
      var grTask = new GlideRecord('task');&amp;#13;
      if ( !grTask.get( this.grSession.u_task.toString() ) ) {&amp;#13;
         this.log.logError( msg + "\nTask not found." );&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
&amp;#13;
      msg += "\nTask number: [" + grTask.number + "]";&amp;#13;
&amp;#13;
      // Get event type and timestamp from session event object&amp;#13;
      var bg_event_type = se["@event_type"];&amp;#13;
      var bg_event_ts = se["@timestamp"];&amp;#13;
&amp;#13;
      // Return silently if Event timestamp is not later than High Water Mark&amp;#13;
      if ( bg_event_ts &amp;lt;= grTask.u_bomgar_event_hwm ) {&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
&amp;#13;
      // Construct the text of the Work Note for supported event types&amp;#13;
      var bg_worknote = '', bg_hostname = '';&amp;#13;
&amp;#13;
      switch ( bg_event_type ) {&amp;#13;
&amp;#13;
         case 'Session Note Added':&amp;#13;
            &amp;#13;
            bg_worknote = 'Bomgar - Session Note Added.';&amp;#13;
            bg_worknote += '\nPerformed by ' + grEvent.u_performed_by.getDisplayValue();&amp;#13;
            bg_worknote += ' at ' + grEvent.u_event_time.toString();&amp;#13;
            bg_worknote += '\n' + se.body;&amp;#13;
            break;&amp;#13;
            &amp;#13;
         case 'File Download':&amp;#13;
            &amp;#13;
            bg_worknote = 'Bomgar - File Downloaded from Customer device.';&amp;#13;
            bg_worknote += '\nDownloaded by: ' + grEvent.u_destination.getDisplayValue();&amp;#13;
            bg_worknote += ' at ' + grEvent.u_event_time.toString();&amp;#13;
            bg_worknote += '\nCustomer Username: ' + grEvent.u_performed_by.getDisplayValue();&amp;#13;
            bg_hostname = grEvent.u_performed_by.u_hostname.toString();&amp;#13;
            if ( bg_hostname ) {&amp;#13;
               bg_worknote += '\nCustomer Hostname: ' + bg_hostname;&amp;#13;
            }&amp;#13;
            bg_worknote += '\nTarget Filename: ' + se.filename;&amp;#13;
            bg_worknote += '\nTarget Filesize: ' + se.filesize;&amp;#13;
            bg_worknote += '\n';&amp;#13;
            break;&amp;#13;
            &amp;#13;
         case 'File Upload':&amp;#13;
            &amp;#13;
            bg_worknote = 'Bomgar - File Uploaded to Customer device.';&amp;#13;
            bg_worknote += '\nUploaded by: ' + grEvent.u_performed_by.getDisplayValue();&amp;#13;
            bg_worknote += ' at ' + grEvent.u_event_time.toString();&amp;#13;
            bg_worknote += '\nCustomer Username: ' + grEvent.u_destination.getDisplayValue();&amp;#13;
            bg_hostname = grEvent.u_destination.u_hostname.toString();&amp;#13;
            if ( bg_hostname ) {&amp;#13;
               bg_worknote += '\nCustomer Hostname: ' + bg_hostname;&amp;#13;
            }&amp;#13;
            bg_worknote += '\nTarget Filename: ' + se.filename;&amp;#13;
            bg_worknote += '\nTarget Filesize: ' + se.filesize;&amp;#13;
            bg_worknote += '\n';&amp;#13;
            break;&amp;#13;
            &amp;#13;
         default:&amp;#13;
            // default ... do nothing&amp;#13;
            return null;&amp;#13;
         &amp;#13;
      }&amp;#13;
&amp;#13;
      grTask.work_notes = bg_worknote;&amp;#13;
      grTask.u_bomgar_event_hwm = bg_event_ts;&amp;#13;
      &amp;#13;
      var gr_id = grTask.update();&amp;#13;
      if ( gr_id ) {&amp;#13;
         // Success, return sys_id&amp;#13;
         return grTask.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         this.log.logError( msg + "\nFailed to add WorkNote." );&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
&amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   findTaskId: function( task_no ) {&amp;#13;
   //-------------------------------------------------------&amp;#13;
      // Returns the sys_id of the task record&amp;#13;
&amp;#13;
      var task_id, msg = "findTaskId";&amp;#13;
      msg += "\nTask number: [" + task_no + "]";&amp;#13;
      var gr = new GlideRecord('task');&amp;#13;
      gr.addQuery('number', task_no);&amp;#13;
      gr.query();&amp;#13;
      msg += "\nFound " + gr.getRowCount() + " tasks";&amp;#13;
&amp;#13;
      if ( gr.next() ) {&amp;#13;
         // Task found, return sys_id&amp;#13;
         return gr.sys_id.toString();&amp;#13;
      } else {&amp;#13;
         this.log.logWarning( "Task not found, task number: [" + task_no + "]" );&amp;#13;
         return null;&amp;#13;
      }&amp;#13;
   },&amp;#13;
   &amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   // The following utility functions assist the main functions above.&amp;#13;
   //----------------------------------------------------------------------------&amp;#13;
   //&amp;#13;
   //-------------------------------------------------------&amp;#13;
   ensureArray: function( item ) {&amp;#13;
      // Sequences of XML elements of the same type are converted into JavaScript&amp;#13;
      // Arrays with each element being an instance of the element object. However,&amp;#13;
      // if an element appears only once it will be presented as a single object. &amp;#13;
&amp;#13;
      // This conversion routine ensures that any elements that may appear one or &amp;#13;
      // more times are converted into an array, even if the array consists of&amp;#13;
      // only a single element.&amp;#13;
&amp;#13;
      // Ensure that we have an array&amp;#13;
      if ( this._is_array(item) ) {&amp;#13;
         return item;&amp;#13;
      } else {&amp;#13;
         var item_array = [];&amp;#13;
         if (item) {&amp;#13;
            item_array.push(item);&amp;#13;
         }&amp;#13;
         return item_array;&amp;#13;
      }&amp;#13;
      &amp;#13;
   },&amp;#13;
   &amp;#13;
   //-------------------------------------------------------&amp;#13;
   _is_array: function(v) {&amp;#13;
      return Object.prototype.toString.apply(v) === '[object Array]';&amp;#13;
   },&amp;#13;
   &amp;#13;
   type: 'BomgarAPI'&amp;#13;
   &amp;#13;
};&amp;#13;
&lt;/script&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 14:45:54&lt;/sys_created_on&gt;&lt;sys_id&gt;76f8483be033300029a6fccbaa5d482d&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:02:58&lt;/sys_updated_on&gt;&lt;u_reason_for_change/&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>68001ccb5c44c100e28a0c90fdabf3c6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>BomgarAPI</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT</action>
<category>customer</category>
<comments/>
<name>dictionary_task_cf3c8b615c8c8100e28a0c90fdabf387</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;database&gt;&lt;element label="Task" name="task" type="collection"&gt;&lt;element label="Bomgar Event HWM" max_length="40" name="u_bomgar_event_hwm" type="integer"/&gt;&lt;/element&gt;&lt;/database&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>68001ccb5c44c100e28a0c90fdabf3c7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>task</table>
<target_name>Task</target_name>
<type>Database field(s)</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_091ed7395ccc8100e28a0c90fdabf342</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_properties_category_m2m"&gt;&lt;sys_properties_category_m2m action="INSERT_OR_UPDATE"&gt;&lt;category display_value="BomgarAppliance"&gt;6ecc17a3e033300029a6fccbaa5d4889&lt;/category&gt;&lt;order&gt;300&lt;/order&gt;&lt;property display_value="tu.bomgar.worknote.events"&gt;740e53b55ccc8100e28a0c90fdabf309&lt;/property&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-12 11:24:15&lt;/sys_created_on&gt;&lt;sys_id&gt;091ed7395ccc8100e28a0c90fdabf342&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:28:39&lt;/sys_updated_on&gt;&lt;/sys_properties_category_m2m&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>6c001ccb5c44c100e28a0c90fdabf3c3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>tu.bomgar.worknote.events.BomgarAppliance</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action/>
<category>customer</category>
<comments/>
<name>sys_dictionary_task_u_bomgar_event_hwm</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sys_dictionary element="u_bomgar_event_hwm" table="task"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation/&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value&gt;0&lt;/default_value&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;element&gt;u_bomgar_event_hwm&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;internal_type&gt;integer&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;task&lt;/name&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_qual/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-11 15:30:19&lt;/sys_created_on&gt;&lt;sys_id&gt;33cccb615c8c8100e28a0c90fdabf396&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-11 15:38:30&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>a0001ccb5c44c100e28a0c90fdabf3c8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>task</table>
<target_name>Task.u_bomgar_event_hwm</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_05a9f3a7e033300029a6fccbaa5d4803</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;SEPARATOR&lt;/link_type&gt;&lt;map_page/&gt;&lt;name/&gt;&lt;order&gt;1000&lt;/order&gt;&lt;query&gt;Session details&lt;/query&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 13:38:41&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;05a9f3a7e033300029a6fccbaa5d4803&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:53:16&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title/&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>a4001ccb5c44c100e28a0c90fdabf3c5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>Module.05a9f3a7e033300029a6fccbaa5d4803</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sysevent_script_action_a2cf2c025c00c100e28a0c90fdabf364</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sysevent_script_action"&gt;&lt;sysevent_script_action action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;condition_script&gt;current.u_end_time.nil()&lt;/condition_script&gt;&lt;description&gt;Reacts to the session start event from a Bomgar Appliance.&amp;#13;
&amp;#13;
This is implemented as an internal scheduled event within ServiceNow because there seems to be a delay in the Bomgar appliance between sending its session_start event and actually having a session available to be interrogated over the HTTP/XML API. If we react immediately to the session_start event with a retrieveSession call then it returns a "no such session exists" type error message.&lt;/description&gt;&lt;event_name&gt;bomgar.session.refresh&lt;/event_name&gt;&lt;name&gt;Bomgar Session Refresh&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;// This script will only execute if the session has no End Time set&amp;#13;
//  i.e. if the Bomgar Session is still in progress&amp;#13;
&amp;#13;
refresh_session_data( event.parm1, event.parm2 );&amp;#13;
&amp;#13;
function refresh_session_data( appliance_id, lsid ) {&amp;#13;
   &amp;#13;
   var bg, msg = "Bomgar Session Refresh";&amp;#13;
   msg += "\nAppliance ID : [" + appliance_id + "]";&amp;#13;
   msg += "\nLSID : [" + lsid + "]";&amp;#13;
&amp;#13;
   // Initialise the API&amp;#13;
   try {&amp;#13;
      bg = new BomgarAPI( appliance_id );&amp;#13;
   } catch(e) {&amp;#13;
      msg += "\nFailed to initialise Bomgar API\n" + e.name + "\n" + e.message;&amp;#13;
      gs.logError(msg,'Bomgar Refresh');&amp;#13;
      return null;&amp;#13;
   }&amp;#13;
   &amp;#13;
   // Get the session data&amp;#13;
   var session = bg.retrieveSession(lsid);&amp;#13;
   if (!session) {&amp;#13;
      msg += "\nFailed to obtain details of session";&amp;#13;
      msg += "\n" + bg.getErrorMessage();&amp;#13;
      gs.logError(msg,'Bomgar Refresh');&amp;#13;
      return null;&amp;#13;
   }&amp;#13;
   &amp;#13;
   // Update the Bomgar Session record&amp;#13;
   if ( !bg.saveSession(session) ) {&amp;#13;
      msg += "\nFailed to save details of session [" + bg.getSessionName() + "]";&amp;#13;
      msg += "\n" + bg.getErrorMessage();&amp;#13;
      gs.logError(msg,'Bomgar Refresh');&amp;#13;
      return null;&amp;#13;
   }&amp;#13;
&amp;#13;
   msg += "\nSession refreshed : [" + bg.getSessionName() + "]";&amp;#13;
&amp;#13;
   // Read the refresh interval and set next refresh time&amp;#13;
   var refresh_interval = parseInt( gs.getProperty( 'tu.bomgar.session.refresh.interval', '0' ) );&amp;#13;
   msg += "\nRefresh interval : [" + refresh_interval + "] minutes";&amp;#13;
   var run_at = new GlideDateTime();&amp;#13;
   run_at.addSeconds( refresh_interval * 60 );&amp;#13;
&amp;#13;
   // Schedule the next refresh, if appropriate&amp;#13;
   if ( refresh_interval &amp;gt; 0 &amp;amp;&amp;amp; bg.sessionInProgress ) {&amp;#13;
      gs.eventQueueScheduled('bomgar.session.refresh', current, &amp;#13;
                              appliance_id, lsid, run_at);&amp;#13;
      msg += "\nSession is in progress', refresh scheduled at " + run_at;&amp;#13;
   } else {&amp;#13;
      msg += "\nSession is complete";&amp;#13;
   }&amp;#13;
&amp;#13;
   // Say we've done it&amp;#13;
   bg.log.logInfo(msg);&amp;#13;
   &amp;#13;
}&amp;#13;
&lt;/script&gt;&lt;synchronous&gt;false&lt;/synchronous&gt;&lt;sys_class_name&gt;sysevent_script_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-12 17:21:16&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;a2cf2c025c00c100e28a0c90fdabf364&lt;/sys_id&gt;&lt;sys_mod_count&gt;9&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:16:07&lt;/sys_updated_on&gt;&lt;u_reason_for_change/&gt;&lt;/sysevent_script_action&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>a4001ccb5c44c100e28a0c90fdabf3c6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>bomgar</table>
<target_name>Bomgar Session Refresh</target_name>
<type>Script Action</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sysevent_register_b69f60425c00c100e28a0c90fdabf3e8</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sysevent_register"&gt;&lt;sysevent_register action="INSERT_OR_UPDATE"&gt;&lt;description&gt;Event to read session details from Bomgar Appliance, periodically, while session is in progress.&lt;/description&gt;&lt;event_name&gt;bomgar.session.refresh&lt;/event_name&gt;&lt;fired_by&gt;Bomgar Session Script Actions&lt;/fired_by&gt;&lt;queue/&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-12 17:20:27&lt;/sys_created_on&gt;&lt;sys_id&gt;b69f60425c00c100e28a0c90fdabf3e8&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-12 17:20:27&lt;/sys_updated_on&gt;&lt;table&gt;u_tu_bg_session&lt;/table&gt;&lt;/sysevent_register&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>a4001ccb5c44c100e28a0c90fdabf3c7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_session</table>
<target_name>bomgar.session.refresh</target_name>
<type>Event Registration</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_properties_740e53b55ccc8100e28a0c90fdabf309</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_properties"&gt;&lt;sys_properties action="INSERT_OR_UPDATE"&gt;&lt;choices/&gt;&lt;description&gt;Please supply a comma separated list of Session Events that will be recorded as Task Work Notes&lt;/description&gt;&lt;ignore_cache&gt;false&lt;/ignore_cache&gt;&lt;is_private&gt;false&lt;/is_private&gt;&lt;name&gt;tu.bomgar.worknote.events&lt;/name&gt;&lt;read_roles/&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-12 11:23:58&lt;/sys_created_on&gt;&lt;sys_id&gt;740e53b55ccc8100e28a0c90fdabf309&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-12 11:23:58&lt;/sys_updated_on&gt;&lt;type&gt;string&lt;/type&gt;&lt;value&gt;Session Note Added, File Download, File Upload&lt;/value&gt;&lt;write_roles/&gt;&lt;/sys_properties&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=740e53b55ccc8100e28a0c90fdabf309"/&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>ac001ccb5c44c100e28a0c90fdabf3c4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>tu.bomgar.worknote.events</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_b2d93ba7e033300029a6fccbaa5d48ef</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;SEPARATOR&lt;/link_type&gt;&lt;map_page/&gt;&lt;name/&gt;&lt;order&gt;2000&lt;/order&gt;&lt;query&gt;User details&lt;/query&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 13:39:18&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;b2d93ba7e033300029a6fccbaa5d48ef&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:53:43&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title/&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>e0001ccb5c44c100e28a0c90fdabf3c6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>Module.b2d93ba7e033300029a6fccbaa5d48ef</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_3df937a7e033300029a6fccbaa5d480a</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;SEPARATOR&lt;/link_type&gt;&lt;map_page/&gt;&lt;name/&gt;&lt;order&gt;10&lt;/order&gt;&lt;query&gt;System details&lt;/query&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 13:39:47&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;3df937a7e033300029a6fccbaa5d480a&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:53:32&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title/&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>e0001ccb5c44c100e28a0c90fdabf3c7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>Module.3df937a7e033300029a6fccbaa5d480a</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_ed4fdfa3e033300029a6fccbaa5d486f</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;false&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image/&gt;&lt;link_type&gt;LIST&lt;/link_type&gt;&lt;map_page/&gt;&lt;name&gt;u_tu_bg_session_event&lt;/name&gt;&lt;order&gt;1900&lt;/order&gt;&lt;query/&gt;&lt;report/&gt;&lt;roles/&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:43:09&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;ed4fdfa3e033300029a6fccbaa5d486f&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:36:24&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title&gt;Bomgar Session Event&lt;/title&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>e4001ccb5c44c100e28a0c90fdabf3c9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_session_event</table>
<target_name>u_tu_bg_session_event</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_850d57a3e033300029a6fccbaa5d4844</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_properties_category_m2m"&gt;&lt;sys_properties_category_m2m action="DELETE"&gt;&lt;category display_value="BomgarAppliance"&gt;6ecc17a3e033300029a6fccbaa5d4889&lt;/category&gt;&lt;order&gt;600&lt;/order&gt;&lt;property display_value="tu.bomgar.socket.timeout"&gt;f9cbd323e033300029a6fccbaa5d4856&lt;/property&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:33:18&lt;/sys_created_on&gt;&lt;sys_id&gt;850d57a3e033300029a6fccbaa5d4844&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:28:39&lt;/sys_updated_on&gt;&lt;/sys_properties_category_m2m&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>e8001ccb5c44c100e28a0c90fdabf3c8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>tu.bomgar.socket.timeout.BomgarAppliance</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_c90d57a3e033300029a6fccbaa5d4843</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_properties_category_m2m"&gt;&lt;sys_properties_category_m2m action="DELETE"&gt;&lt;category display_value="BomgarAppliance"&gt;6ecc17a3e033300029a6fccbaa5d4889&lt;/category&gt;&lt;order&gt;500&lt;/order&gt;&lt;property display_value="tu.bomgar.connect.timeout"&gt;677bdf63e033300029a6fccbaa5d481e&lt;/property&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 11:33:18&lt;/sys_created_on&gt;&lt;sys_id&gt;c90d57a3e033300029a6fccbaa5d4843&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:28:39&lt;/sys_updated_on&gt;&lt;/sys_properties_category_m2m&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>ec001ccb5c44c100e28a0c90fdabf3c5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>tu.bomgar.connect.timeout.BomgarAppliance</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_18fa18165c40c100e28a0c90fdabf3a1</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_properties_category_m2m"&gt;&lt;sys_properties_category_m2m action="INSERT_OR_UPDATE"&gt;&lt;category display_value="BomgarAppliance"&gt;6ecc17a3e033300029a6fccbaa5d4889&lt;/category&gt;&lt;order&gt;400&lt;/order&gt;&lt;property display_value="tu.bomgar.session.refresh.interval"&gt;ea5e88925c40c100e28a0c90fdabf3be&lt;/property&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-13 10:28:39&lt;/sys_created_on&gt;&lt;sys_id&gt;18fa18165c40c100e28a0c90fdabf3a1&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:28:39&lt;/sys_updated_on&gt;&lt;/sys_properties_category_m2m&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>ec001ccb5c44c100e28a0c90fdabf3c6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>tu.bomgar.session.refresh.interval.BomgarAppliance</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<category>customer</category>
<comments/>
<name>sys_app_module_1e5933e7e033300029a6fccbaa5d48f6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_app_module"&gt;&lt;sys_app_module action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;application display_value="bomgar"&gt;b5bdd7a3e033300029a6fccbaa5d4857&lt;/application&gt;&lt;content_page/&gt;&lt;filter/&gt;&lt;hint/&gt;&lt;homepage/&gt;&lt;image&gt;images/properties.gif&lt;/image&gt;&lt;link_type&gt;DIRECT&lt;/link_type&gt;&lt;map_page/&gt;&lt;name/&gt;&lt;order&gt;900&lt;/order&gt;&lt;query&gt;system_properties_ui.do?sysparm_title=Bomgar%20Integration%20Properties&amp;amp;sysparm_category=BomgarAppliance,BomgarLogging&lt;/query&gt;&lt;report/&gt;&lt;roles&gt;bomgar_admin&lt;/roles&gt;&lt;survey/&gt;&lt;survey_overwrite&gt;true&lt;/survey_overwrite&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-05 13:38:07&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;1e5933e7e033300029a6fccbaa5d48f6&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_overrides/&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-13 10:52:35&lt;/sys_updated_on&gt;&lt;timeline_page/&gt;&lt;title&gt;Properties&lt;/title&gt;&lt;u_count_color/&gt;&lt;u_count_filter/&gt;&lt;u_refresh_interval/&gt;&lt;u_show_count&gt;false&lt;/u_show_count&gt;&lt;u_sort_order/&gt;&lt;uncancelable&gt;false&lt;/uncancelable&gt;&lt;view_name/&gt;&lt;window_name/&gt;&lt;/sys_app_module&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>ec001ccb5c44c100e28a0c90fdabf3c7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table/>
<target_name>Module.1e5933e7e033300029a6fccbaa5d48f6</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action/>
<category>customer</category>
<comments/>
<name>sys_dictionary_u_tu_bg_session_actor_u_display_name</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sys_dictionary element="u_display_name" table="u_tu_bg_session_actor"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation/&gt;&lt;choice&gt;0&lt;/choice&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;display&gt;true&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;element&gt;u_display_name&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;internal_type&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;u_tu_bg_session_actor&lt;/name&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_qual/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;team.ultra&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2013-03-08 12:04:43&lt;/sys_created_on&gt;&lt;sys_id&gt;36f0cf6c5c088100e28a0c90fdabf3f6&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;team.ultra&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2013-03-08 12:28:47&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;</payload>
<remote_update_set display_value="TeamUltra Bomgar Integration - Patch 1">a0001ccb5c44c100e28a0c90fdabf3c3</remote_update_set>
<sys_created_by>huw.nolan</sys_created_by>
<sys_created_on>2013-03-15 17:36:19</sys_created_on>
<sys_id>ec001ccb5c44c100e28a0c90fdabf3c8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>huw.nolan</sys_updated_by>
<sys_updated_on>2013-03-15 17:36:19</sys_updated_on>
<table>u_tu_bg_session_actor</table>
<target_name>Bomgar Session Actor.u_display_name</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
